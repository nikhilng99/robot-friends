{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","toLowerCase","includes","length","Component","ReactDOM","render","document","getElementById"],"mappings":"oOASeA,EAPF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,GAAhB,OAA0B,yBAAKC,UAAU,uDAClD,yBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,6BACI,4BAAKF,GACL,2BAAIC,MCgBGK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,6BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,kBAAC,EAAD,CAEIV,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,MACjBC,GAAIK,EAAOG,GAAGR,GACdS,IAAKD,SCAlBE,EAXG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,yBAAKX,UAAU,OACX,2BAAOY,KAAK,SACRZ,UAAU,mCACVa,YAAY,gBACZC,SAAUH,MCEXI,EATF,SAACC,GACV,OACI,yBAAKC,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAkBC,OAAO,UAC/DJ,EAAMK,WCkDAC,G,wDA7Cb,aAAe,IAAD,8BACZ,gBAgBFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAhB1C,EAAKC,MAAQ,CACXxB,OAAQ,GACRM,YAAa,IAJH,E,gEASO,IAAD,OAClBmB,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAAErB,OAAQ6B,S,+BAUjC,IAAD,EACyBC,KAAKN,MAA7BxB,EADD,EACCA,OAAQM,EADT,EACSA,YACVyB,EAAiB/B,EAAOgC,QAAO,SAAAhC,GACnC,OAAOA,EAAOP,KAAKwC,cAAcC,SAAS5B,EAAY2B,kBAExD,OAAiC,IAA7BH,KAAKN,MAAMxB,OAAOmC,OACb,uCAIL,yBAAKvC,UAAU,MACb,wBAAIA,UAAU,MAAd,iBACA,kBAAC,EAAD,CAAWW,aAAcuB,KAAKX,iBAC9B,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUnB,OAAQ+B,U,GArCZK,c,MCFlBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.e2774b48.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => (<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n    <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n    <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n    </div>\r\n</div>)\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card\r\n                           \r\n                            name={robots[i].name}\r\n                            email={robots[i].email}\r\n                            id={robots[i].id}\r\n                            key={i}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default CardList","import React from 'react'\r\n\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input type=\"search\"\r\n                className='pa2 ba b--green bg-lightest-blue'\r\n                placeholder='Search Robots'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\nexport default SearchBox","import React from 'react';\r\n\r\nconst Scroll=(props)=>{\r\n    return(\r\n        <div style={{overflowY:'scroll',border:'5px solid black',height:'800px'}}>\r\n        {props.children}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react'\r\nimport CardList from '../components/CardList'\r\nimport SearchBox from '../components/SearchBox'\r\nimport Scroll from '../components/Scroll'\r\n//import { robots } from './robots'\r\nimport './App.css'\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: ''\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(users => this.setState({ robots: users }))\r\n\r\n\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value })\r\n\r\n  }\r\n\r\n  render() {\r\n    const { robots, searchfield } = this.state\r\n    const filteredRobots = robots.filter(robots => {\r\n      return robots.name.toLowerCase().includes(searchfield.toLowerCase())\r\n    })\r\n    if (this.state.robots.length === 0) {\r\n      return <h1>Loading</h1>\r\n    }\r\n    else {\r\n      return (\r\n        <div className='tc'>\r\n          <h1 className='f1'>Robot Friends</h1>\r\n          <SearchBox searchChange={this.onSearchChange} />\r\n          <Scroll>\r\n            <CardList robots={filteredRobots} />\r\n          </Scroll>\r\n\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport 'tachyons'\r\n\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}